{"version":3,"sources":["components/common/PageTitle.js","util/index.js","components/DashboardMetric.js","components/DashboardChart.js","pages/Dashboard.js"],"names":["PageTitle","title","className","formatCurrency","num","toString","replace","DashboardMetric","value","icon","DashboardChart","salesData","chartLabels","map","sale","date","chartValues","amount","height","data","canvas","gradientFill","getContext","createLinearGradient","addColorStop","labels","datasets","label","borderColor","backgroundColor","options","elements","line","tension","borderWidth","point","radius","scales","yAxes","ticks","callback","Dashboard","fetchContext","useContext","FetchContext","useState","dashboardData","setDashboardData","useEffect","a","authAxios","get","console","log","getDashboardData","salesVolume","faChartArea","newCustomers","faUserPlus","refunds","faDollarSign","Card","graphData"],"mappings":"8GAAA,oBAUeA,IARG,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OAChB,yBAAKC,UAAU,gBACb,wBAAIA,UAAU,oCACXD,M,iCCLP,kCAAO,IAAME,EAAiB,SAAAC,GAC5B,MAAM,IAAN,OAAWA,EACRC,WACAC,QAAQ,0BAA2B,U,6GCYzBC,EAZS,SAAC,GAA4B,IAA1BN,EAAyB,EAAzBA,MAAOO,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KACvC,OACE,yBAAKP,UAAU,gEACb,uBAAGA,UAAU,mCACX,kBAAC,IAAD,CAAiBO,KAAMA,EAAMP,UAAU,SACtCD,GAEH,uBAAGC,UAAU,oCAAoCM,K,0CC+CxCE,EArDQ,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAClBC,EAAcD,EAAUE,KAAI,SAAAC,GAAI,OAAIA,EAAKC,QACzCC,EAAcL,EAAUE,KAAI,SAAAC,GAAI,OAAIA,EAAKG,UAyB/C,OACE,kBAAC,IAAD,CACEC,OAAQ,IACRC,KA1Bc,SAAAC,GAChB,IACIC,EADQD,EAAOE,WAAW,MACPC,qBACrB,EACA,EACA,EACA,KAIF,OAFAF,EAAaG,aAAa,EAAG,yBAC7BH,EAAaG,aAAa,EAAG,wBACtB,CACLC,OAAQb,EACRc,SAAU,CACR,CACEC,MAAO,QACPC,YAAa,UACbT,KAAMH,EACNa,gBAAiBR,MAUrBS,QAAS,CACPC,SAAU,CACRC,KAAM,CACJC,QAAS,GACTC,YAAa,KAEfC,MAAO,CAAEC,OAAQ,IAEnBC,OAAQ,CACNC,MAAO,CACL,CACEC,MAAO,CACLC,SAAU,SAAAhC,GAAK,OAAIL,YAAeK,YCsCnCiC,UApEG,WAChB,IAAMC,EAAeC,qBAAWC,KADV,EAEoBC,qBAFpB,mBAEfC,EAFe,KAEAC,EAFA,KAmBtB,OAfAC,qBAAU,YACc,uCAAG,8BAAAC,EAAA,+EAEEP,EAAaQ,UAAUC,IAC5C,kBAHmB,gBAEbhC,EAFa,EAEbA,KAGR4B,EAAiB5B,GALI,gDAOrBiC,QAAQC,IAAR,MAPqB,yDAAH,qDAWtBC,KACC,CAACZ,IAGF,oCACE,kBAAC1C,EAAA,EAAD,CAAWC,MAAM,cAChB6C,EACC,oCACE,yBAAK5C,UAAU,kCACb,yBAAKA,UAAU,wCACb,kBAAC,EAAD,CACED,MAAM,eACNO,MAAOL,YACL2C,EAAcS,aAEhB9C,KAAM+C,OAGV,yBAAKtD,UAAU,gDACb,kBAAC,EAAD,CACED,MAAM,gBACNO,MAAOsC,EAAcW,aACrBhD,KAAMiD,OAGV,yBAAKxD,UAAU,wCACb,kBAAC,EAAD,CACED,MAAM,UACNO,MAAOL,YACL2C,EAAca,SAEhBlD,KAAMmD,QAIZ,yBAAK1D,UAAU,eACb,kBAAC2D,EAAA,EAAD,KACGf,GACC,kBAAC,EAAD,CACEnC,UAAWmC,EAAcgB,eAOnC","file":"static/js/4.09669efe.chunk.js","sourcesContent":["import React from 'react';\n\nconst PageTitle = ({ title }) => (\n  <div className=\"my-1 sm:my-4\">\n    <h2 className=\"text-gray-800 font-bold text-2xl\">\n      {title}\n    </h2>\n  </div>\n);\n\nexport default PageTitle;\n","export const formatCurrency = num => {\n  return `$${num\n    .toString()\n    .replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')}`;\n};\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst DashboardMetric = ({ title, value, icon }) => {\n  return (\n    <div className=\"bg-white rounded-lg shadow-lg p-4 border-t-4 border-blue-500\">\n      <p className=\"text-gray-600 uppercase text-xs\">\n        <FontAwesomeIcon icon={icon} className=\"mr-2\" />\n        {title}\n      </p>\n      <p className=\"text-3xl text-blue-600 font-bold\">{value}</p>\n    </div>\n  );\n};\n\nexport default DashboardMetric;\n","import React from 'react';\nimport { Line as LineChart } from 'react-chartjs-2';\nimport { formatCurrency } from './../util';\n\nconst DashboardChart = ({ salesData }) => {\n  const chartLabels = salesData.map(sale => sale.date);\n  const chartValues = salesData.map(sale => sale.amount);\n\n  const chartData = canvas => {\n    const ctx = canvas.getContext('2d');\n    var gradientFill = ctx.createLinearGradient(\n      0,\n      0,\n      0,\n      250\n    );\n    gradientFill.addColorStop(0, 'rgba(0, 97, 215, 0.3)');\n    gradientFill.addColorStop(1, 'rgba(0, 200, 255, 0)');\n    return {\n      labels: chartLabels,\n      datasets: [\n        {\n          label: 'Sales',\n          borderColor: '#3182ce',\n          data: chartValues,\n          backgroundColor: gradientFill\n        }\n      ]\n    };\n  };\n\n  return (\n    <LineChart\n      height={100}\n      data={chartData}\n      options={{\n        elements: {\n          line: {\n            tension: 0.3,\n            borderWidth: 1.5\n          },\n          point: { radius: 0 }\n        },\n        scales: {\n          yAxes: [\n            {\n              ticks: {\n                callback: value => formatCurrency(value)\n              }\n            }\n          ]\n        }\n      }}\n    />\n  );\n};\n\nexport default DashboardChart;\n","import React, {\n  useState,\n  useContext,\n  useEffect\n} from 'react';\nimport PageTitle from '../components/common/PageTitle';\nimport DashboardMetric from './../components/DashboardMetric';\nimport Card from '../components/common/Card';\nimport {\n  faChartArea,\n  faDollarSign,\n  faUserPlus\n} from '@fortawesome/free-solid-svg-icons';\nimport { FetchContext } from '../context/FetchContext';\nimport { formatCurrency } from './../util';\nimport DashboardChart from './../components/DashboardChart';\n\nconst Dashboard = () => {\n  const fetchContext = useContext(FetchContext);\n  const [dashboardData, setDashboardData] = useState();\n\n  useEffect(() => {\n    const getDashboardData = async () => {\n      try {\n        const { data } = await fetchContext.authAxios.get(\n          'dashboard-data'\n        );\n        setDashboardData(data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    getDashboardData();\n  }, [fetchContext]);\n\n  return (\n    <>\n      <PageTitle title=\"Dashboard\" />\n      {dashboardData ? (\n        <>\n          <div className=\"mb-4 flex flex-col sm:flex-row\">\n            <div className=\"w-full sm:w-1/3 sm:mr-2 mb-4 sm:mb-0\">\n              <DashboardMetric\n                title=\"Sales Volume\"\n                value={formatCurrency(\n                  dashboardData.salesVolume\n                )}\n                icon={faChartArea}\n              />\n            </div>\n            <div className=\"w-full sm:w-1/3 sm:ml-2 sm:mr-2 mb-4 sm:mb-0\">\n              <DashboardMetric\n                title=\"New Customers\"\n                value={dashboardData.newCustomers}\n                icon={faUserPlus}\n              />\n            </div>\n            <div className=\"w-full sm:w-1/3 sm:ml-2 mb-4 sm:mb-0\">\n              <DashboardMetric\n                title=\"Refunds\"\n                value={formatCurrency(\n                  dashboardData.refunds\n                )}\n                icon={faDollarSign}\n              />\n            </div>\n          </div>\n          <div className=\"w-full mt-4\">\n            <Card>\n              {dashboardData && (\n                <DashboardChart\n                  salesData={dashboardData.graphData}\n                />\n              )}\n            </Card>\n          </div>\n        </>\n      ) : (\n        <p>Loading...</p>\n      )}\n    </>\n  );\n};\n\nexport default Dashboard;\n"],"sourceRoot":""}